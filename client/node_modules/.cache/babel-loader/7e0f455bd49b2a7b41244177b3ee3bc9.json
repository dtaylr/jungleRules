{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/Documents/Dev/Jects/Project 1 copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/admin/Documents/Dev/Jects/Project 1 copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/admin/Documents/Dev/Jects/Project 1 copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/Dev/Jects/Project 1 copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/Dev/Jects/Project 1 copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/Dev/Jects/Project 1 copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/Dev/Jects/Project 1 copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Documents/Dev/Jects/Project 1 copy/client/src/context.js\";\nimport React, { Component } from 'react';\nimport { animalList, animalDetail } from './data'; //to be used w/ state.\n\nvar AnimalContext = React.createContext(); //Provider = provider info for all of app\n//Consumer = To use the info from provider\n\nvar AnimalProvider = /*#__PURE__*/function (_Component) {\n  _inherits(AnimalProvider, _Component);\n\n  function AnimalProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AnimalProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AnimalProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      animals: [],\n      animalDetail: animalDetail\n    };\n\n    _this.setAnimals = function () {\n      //function\n      var animals = [];\n      animalList.forEach(function (animal) {\n        var singleAnimal = _objectSpread({}, animal); //copies values; this is how values are copied instead of referencing\n\n\n        animals = [].concat(_toConsumableArray(animals), [singleAnimal]); //sets array equal to\n      });\n\n      _this.setState(function () {\n        return {\n          animals: animals\n        };\n      });\n    };\n\n    _this.getAnimal = function (id) {\n      var animal = _this.state.animals.find(function (animal) {\n        return animal.id === id;\n      });\n\n      return animal;\n    };\n\n    _this.handleDetail = function (id) {\n      var animal = _this.getAnimal(id); //uses returned animal  \n\n\n      _this.setState(function () {\n        return {\n          animalDetail: animal\n        }; //returns animal detail pg.\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AnimalProvider, [{\n    key: \"componentDidMount\",\n    //places component from loop method.\n    value: function componentDidMount() {\n      this.setAnimals();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (\n        /*#__PURE__*/\n        //value can be a string or an obj.\n        React.createElement(AnimalContext.Provider, {\n          value: _objectSpread({}, this.state, {\n            handleDetail: this.handleDetail //gets all prop values directly from state and destructres.\n\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }\n        }, this.props.children)\n      );\n    }\n  }]);\n\n  return AnimalProvider;\n}(Component);\n\nvar AnimalConsumer = AnimalContext.Consumer;\nexport { AnimalProvider, AnimalConsumer };","map":{"version":3,"sources":["/Users/admin/Documents/Dev/Jects/Project 1 copy/client/src/context.js"],"names":["React","Component","animalList","animalDetail","AnimalContext","createContext","AnimalProvider","state","animals","setAnimals","forEach","animal","singleAnimal","setState","getAnimal","id","find","handleDetail","props","children","AnimalConsumer","Consumer"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,QAAvC,C,CAAgD;;AAEhD,IAAMC,aAAa,GAAGJ,KAAK,CAACK,aAAN,EAAtB,C,CACA;AACA;;IAEMC,c;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJL,MAAAA,YAAY,EAAEA;AAFV,K;;UAURM,U,GAAa,YAAM;AAAE;AACnB,UAAID,OAAO,GAAG,EAAd;AACAN,MAAAA,UAAU,CAACQ,OAAX,CAAoB,UAAAC,MAAM,EAAI;AAC5B,YAAMC,YAAY,qBAAOD,MAAP,CAAlB,CAD4B,CACK;;;AACjCH,QAAAA,OAAO,gCAAOA,OAAP,IAAeI,YAAf,EAAP,CAF4B,CAES;AAEtC,OAJD;;AAKA,YAAKC,QAAL,CAAc,YAAM;AAClB,eAAO;AAACL,UAAAA,OAAO,EAACA;AAAT,SAAP;AACD,OAFD;AAGD,K;;UAGDM,S,GAAY,UAAAC,EAAE,EAAI;AAChB,UAAMJ,MAAM,GAAG,MAAKJ,KAAL,CAAWC,OAAX,CAAmBQ,IAAnB,CAAwB,UAAAL,MAAM;AAAA,eAAIA,MAAM,CAACI,EAAP,KAAcA,EAAlB;AAAA,OAA9B,CAAf;;AACA,aAAOJ,MAAP;AACD,K;;UAEDM,Y,GAAe,UAAAF,EAAE,EAAI;AAChB,UAAMJ,MAAM,GAAG,MAAKG,SAAL,CAAeC,EAAf,CAAf,CADgB,CACmB;;;AAClC,YAAKF,QAAL,CAAc,YAAM;AAClB,eAAO;AAACV,UAAAA,YAAY,EAACQ;AAAd,SAAP,CADkB,CACW;AAC9B,OAFD;AAGL,K;;;;;;;AA5BD;wCACmB;AACjB,WAAKF,UAAL;AACD;;;6BA2BM;AACP;AAAA;AACI;AACF,4BAAC,aAAD,CAAe,QAAf;AAAwB,UAAA,KAAK,oBACxB,KAAKF,KADmB;AAE3BU,YAAAA,YAAY,EAAE,KAAKA,YAFQ,CAEM;;AAFN,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,KAAKC,KAAL,CAAWC,QAJd;AAFF;AASD;;;;EA9C0BlB,S;;AAiD7B,IAAMmB,cAAc,GAAGhB,aAAa,CAACiB,QAArC;AAEA,SAAQf,cAAR,EAAwBc,cAAxB","sourcesContent":["import React, { Component } from 'react'\nimport {animalList, animalDetail} from './data' //to be used w/ state.\n \nconst AnimalContext = React.createContext();\n//Provider = provider info for all of app\n//Consumer = To use the info from provider\n\nclass AnimalProvider extends Component {\n    state = {\n        animals: [],\n        animalDetail: animalDetail\n    };\n\n    //places component from loop method.\n    componentDidMount(){\n      this.setAnimals();\n    }\n\n    setAnimals = () => { //function\n      let animals = []; \n      animalList.forEach( animal => {\n        const singleAnimal = {...animal} //copies values; this is how values are copied instead of referencing\n        animals = [...animals,singleAnimal]; //sets array equal to\n        \n      })\n      this.setState(() => {\n        return {animals:animals}\n      })\n    }\n\n    /*function to finds animal by ID*/\n    getAnimal = id => { \n      const animal = this.state.animals.find(animal => animal.id === id); \n      return animal\n    };\n\n    handleDetail = id => {\n         const animal = this.getAnimal(id); //uses returned animal  \n          this.setState(() => {\n            return {animalDetail:animal} //returns animal detail pg.\n          })\n    }\n    \n  render() {\n    return (\n        //value can be a string or an obj.\n      <AnimalContext.Provider value={{\n        ...this.state,\n        handleDetail: this.handleDetail  //gets all prop values directly from state and destructres.\n      }}>\n        {this.props.children}\n      </AnimalContext.Provider>\n    )\n  }\n}\n\nconst AnimalConsumer = AnimalContext.Consumer;\n\nexport {AnimalProvider, AnimalConsumer}"]},"metadata":{},"sourceType":"module"}